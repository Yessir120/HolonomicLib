<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classHolonomicLib_1_1StateMachine" kind="class" language="C++" prot="public">
    <compoundname>HolonomicLib::StateMachine</compoundname>
    <includes refid="StateMachine_8hpp" local="no">StateMachine.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename State</type>
      </param>
      <param>
        <type>State</type>
        <declname>initState</declname>
        <defname>initState</defname>
        <defval>State::IDLE</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHolonomicLib_1_1StateMachine_1a233ae568fdc07a83aac306dc1755e393" prot="private" static="no" mutable="no">
        <type>State</type>
        <definition>State HolonomicLib::StateMachine&lt; State, initState &gt;::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <initializer>= initState</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/StateMachine.hpp" line="20" column="11" bodyfile="include/HolonomicLib/Utility/StateMachine.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHolonomicLib_1_1StateMachine_1a4bd9da043aeb954d960cdd40ec340703" prot="private" static="no" mutable="no">
        <type>pros::Mutex</type>
        <definition>pros::Mutex HolonomicLib::StateMachine&lt; State, initState &gt;::stateLock</definition>
        <argsstring></argsstring>
        <name>stateLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/StateMachine.hpp" line="21" column="17" bodyfile="include/HolonomicLib/Utility/StateMachine.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHolonomicLib_1_1StateMachine_1a6f0aa72f5b506a45f1ca137ccb2a24e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HolonomicLib::StateMachine&lt; State, initState &gt;::StateMachine</definition>
        <argsstring>()</argsstring>
        <name>StateMachine</name>
        <briefdescription>
<para>Construct a new State Machine object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/StateMachine.hpp" line="28" column="5" bodyfile="include/HolonomicLib/Utility/StateMachine.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1StateMachine_1a7b4775f3279fd7004c2d6f6e46178639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>State</type>
        <definition>State HolonomicLib::StateMachine&lt; State, initState &gt;::getState</definition>
        <argsstring>()</argsstring>
        <name>getState</name>
        <briefdescription>
<para>Get the current state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>State the current state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/StateMachine.hpp" line="35" column="11" bodyfile="include/HolonomicLib/Utility/StateMachine.hpp" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1StateMachine_1a9dbf72721774a28d20d5f38cc28f4016" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HolonomicLib::StateMachine&lt; State, initState &gt;::setState</definition>
        <argsstring>(State iState)</argsstring>
        <name>setState</name>
        <param>
          <type>State</type>
          <declname>iState</declname>
        </param>
        <briefdescription>
<para>Set the current state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iState</parametername>
</parameternamelist>
<parameterdescription>
<para>the new state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/StateMachine.hpp" line="47" column="10" bodyfile="include/HolonomicLib/Utility/StateMachine.hpp" bodystart="47" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Template Wrapper class which allows easy state machine (有限狀態機) implementation. </para>
    </briefdescription>
    <detaileddescription>
<para>state machine is an elegant way of programming a subsystem. It involves several possible &quot;states&quot; the subsystem can be in, and allows the state to automatically transition into other states to create complex streams of control.</para>
<para>This specific implementation is thread safe and prevents race condition (競爭危害) through the use of mutexes</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>State</parametername>
</parameternamelist>
<parameterdescription>
<para>the enum class that contains all the possible states of this state machine </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initState</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial state of the state machine, assumed to be idle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="include/HolonomicLib/Utility/StateMachine.hpp" line="18" column="35" bodyfile="include/HolonomicLib/Utility/StateMachine.hpp" bodystart="18" bodyend="52"/>
    <listofallmembers>
      <member refid="classHolonomicLib_1_1StateMachine_1a7b4775f3279fd7004c2d6f6e46178639" prot="public" virt="non-virtual"><scope>HolonomicLib::StateMachine</scope><name>getState</name></member>
      <member refid="classHolonomicLib_1_1StateMachine_1a9dbf72721774a28d20d5f38cc28f4016" prot="public" virt="non-virtual"><scope>HolonomicLib::StateMachine</scope><name>setState</name></member>
      <member refid="classHolonomicLib_1_1StateMachine_1a233ae568fdc07a83aac306dc1755e393" prot="private" virt="non-virtual"><scope>HolonomicLib::StateMachine</scope><name>state</name></member>
      <member refid="classHolonomicLib_1_1StateMachine_1a4bd9da043aeb954d960cdd40ec340703" prot="private" virt="non-virtual"><scope>HolonomicLib::StateMachine</scope><name>stateLock</name></member>
      <member refid="classHolonomicLib_1_1StateMachine_1a6f0aa72f5b506a45f1ca137ccb2a24e4" prot="public" virt="non-virtual"><scope>HolonomicLib::StateMachine</scope><name>StateMachine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
