<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classHolonomicLib_1_1TaskWrapper" kind="class" language="C++" prot="public">
    <compoundname>HolonomicLib::TaskWrapper</compoundname>
    <derivedcompoundref refid="classHolonomicLib_1_1AsyncHolonomicChassisController" prot="public" virt="non-virtual">HolonomicLib::AsyncHolonomicChassisController</derivedcompoundref>
    <includes refid="TaskWrapper_8hpp" local="no">TaskWrapper.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHolonomicLib_1_1TaskWrapper_1a5d511ce2504fd4494d8d57848053647e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; pros::Task &gt;</type>
        <definition>std::unique_ptr&lt;pros::Task&gt; HolonomicLib::TaskWrapper::task</definition>
        <argsstring></argsstring>
        <name>task</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="50" column="21" bodyfile="include/HolonomicLib/Utility/TaskWrapper.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classHolonomicLib_1_1TaskWrapper_1a7c86cdfa2cb0c99bf7169b820aa078eb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HolonomicLib::TaskWrapper::TaskWrapper</definition>
        <argsstring>()=default</argsstring>
        <name>TaskWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="13" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1TaskWrapper_1a251cca2526a0f4c87e60fc4e48e4a2d6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HolonomicLib::TaskWrapper::TaskWrapper</definition>
        <argsstring>(const TaskWrapper &amp;itask)=delete</argsstring>
        <name>TaskWrapper</name>
        <param>
          <type>const <ref refid="classHolonomicLib_1_1TaskWrapper" kindref="compound">TaskWrapper</ref> &amp;</type>
          <declname>itask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="14" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1TaskWrapper_1a09f915ceb1e5dacd86beef177b6b4e70" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HolonomicLib::TaskWrapper::TaskWrapper</definition>
        <argsstring>(TaskWrapper &amp;&amp;itask)=default</argsstring>
        <name>TaskWrapper</name>
        <param>
          <type><ref refid="classHolonomicLib_1_1TaskWrapper" kindref="compound">TaskWrapper</ref> &amp;&amp;</type>
          <declname>itask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="15" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1TaskWrapper_1a5499e201e0a8d84717ff10ee78cbeaa4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual HolonomicLib::TaskWrapper::~TaskWrapper</definition>
        <argsstring>()=default</argsstring>
        <name>~TaskWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="16" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1TaskWrapper_1aae903bdf162e10c1af03c2907e6056bb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void HolonomicLib::TaskWrapper::loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <reimplementedby refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1ae24362f0e83484242658d5adc7c54304">loop</reimplementedby>
        <briefdescription>
<para>Override this function to implement a custom task loop. </para>
        </briefdescription>
        <detaileddescription>
<para>Will throw if not overridden. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="22" column="18" bodyfile="src/HolonomicLib/Utility/TaskWrapper.cpp" bodystart="5" bodyend="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHolonomicLib_1_1TaskWrapper_1a089e272b1a57bacb73fd8641d45e37ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void HolonomicLib::TaskWrapper::startTask</definition>
        <argsstring>(const char *iname=&quot;TaskWrapper&quot;)</argsstring>
        <name>startTask</name>
        <param>
          <type>const char *</type>
          <declname>iname</declname>
          <defval>&quot;TaskWrapper&quot;</defval>
        </param>
        <briefdescription>
<para>Start the task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iname</parametername>
</parameternamelist>
<parameterdescription>
<para>The task name, optional. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="30" column="18" bodyfile="src/HolonomicLib/Utility/TaskWrapper.cpp" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1TaskWrapper_1ae7e853972219642cd24ab3e67fdb6066" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void HolonomicLib::TaskWrapper::resumeTask</definition>
        <argsstring>()</argsstring>
        <name>resumeTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="32" column="18" bodyfile="src/HolonomicLib/Utility/TaskWrapper.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1TaskWrapper_1ac0923845cff95c58e808e584dacff2ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void HolonomicLib::TaskWrapper::pauseTask</definition>
        <argsstring>()</argsstring>
        <name>pauseTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="34" column="18" bodyfile="src/HolonomicLib/Utility/TaskWrapper.cpp" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1TaskWrapper_1a754156c423dcfb09dc4342e2833f3bef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void HolonomicLib::TaskWrapper::stopTask</definition>
        <argsstring>()</argsstring>
        <name>stopTask</name>
        <briefdescription>
<para>Kill the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="39" column="18" bodyfile="src/HolonomicLib/Utility/TaskWrapper.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classHolonomicLib_1_1TaskWrapper_1aa7e1b2112ef72d9c160f84504694be52" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>const char * HolonomicLib::TaskWrapper::getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
<para>Get the task name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The name. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="46" column="24" bodyfile="src/HolonomicLib/Utility/TaskWrapper.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classHolonomicLib_1_1TaskWrapper_1a28e60f47edfca4d94c5484aaac72af61" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HolonomicLib::TaskWrapper::trampoline</definition>
        <argsstring>(void *iparam)</argsstring>
        <name>trampoline</name>
        <param>
          <type>void *</type>
          <declname>iparam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="49" column="17" bodyfile="src/HolonomicLib/Utility/TaskWrapper.cpp" bodystart="29" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>All credit for this class goes to the lib7842. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>HolonomicLib::AsyncHolonomicChassisController</label>
        <link refid="classHolonomicLib_1_1AsyncHolonomicChassisController"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>HolonomicLib::TaskWrapper</label>
        <link refid="classHolonomicLib_1_1TaskWrapper"/>
      </node>
    </inheritancegraph>
    <location file="include/HolonomicLib/Utility/TaskWrapper.hpp" line="11" column="18" bodyfile="include/HolonomicLib/Utility/TaskWrapper.hpp" bodystart="11" bodyend="51"/>
    <listofallmembers>
      <member refid="classHolonomicLib_1_1TaskWrapper_1aa7e1b2112ef72d9c160f84504694be52" prot="public" virt="virtual"><scope>HolonomicLib::TaskWrapper</scope><name>getName</name></member>
      <member refid="classHolonomicLib_1_1TaskWrapper_1aae903bdf162e10c1af03c2907e6056bb" prot="protected" virt="virtual"><scope>HolonomicLib::TaskWrapper</scope><name>loop</name></member>
      <member refid="classHolonomicLib_1_1TaskWrapper_1ac0923845cff95c58e808e584dacff2ec" prot="public" virt="virtual"><scope>HolonomicLib::TaskWrapper</scope><name>pauseTask</name></member>
      <member refid="classHolonomicLib_1_1TaskWrapper_1ae7e853972219642cd24ab3e67fdb6066" prot="public" virt="virtual"><scope>HolonomicLib::TaskWrapper</scope><name>resumeTask</name></member>
      <member refid="classHolonomicLib_1_1TaskWrapper_1a089e272b1a57bacb73fd8641d45e37ef" prot="public" virt="virtual"><scope>HolonomicLib::TaskWrapper</scope><name>startTask</name></member>
      <member refid="classHolonomicLib_1_1TaskWrapper_1a754156c423dcfb09dc4342e2833f3bef" prot="public" virt="virtual"><scope>HolonomicLib::TaskWrapper</scope><name>stopTask</name></member>
      <member refid="classHolonomicLib_1_1TaskWrapper_1a5d511ce2504fd4494d8d57848053647e" prot="private" virt="non-virtual"><scope>HolonomicLib::TaskWrapper</scope><name>task</name></member>
      <member refid="classHolonomicLib_1_1TaskWrapper_1a7c86cdfa2cb0c99bf7169b820aa078eb" prot="protected" virt="non-virtual"><scope>HolonomicLib::TaskWrapper</scope><name>TaskWrapper</name></member>
      <member refid="classHolonomicLib_1_1TaskWrapper_1a251cca2526a0f4c87e60fc4e48e4a2d6" prot="protected" virt="non-virtual"><scope>HolonomicLib::TaskWrapper</scope><name>TaskWrapper</name></member>
      <member refid="classHolonomicLib_1_1TaskWrapper_1a09f915ceb1e5dacd86beef177b6b4e70" prot="protected" virt="non-virtual"><scope>HolonomicLib::TaskWrapper</scope><name>TaskWrapper</name></member>
      <member refid="classHolonomicLib_1_1TaskWrapper_1a28e60f47edfca4d94c5484aaac72af61" prot="private" virt="non-virtual"><scope>HolonomicLib::TaskWrapper</scope><name>trampoline</name></member>
      <member refid="classHolonomicLib_1_1TaskWrapper_1a5499e201e0a8d84717ff10ee78cbeaa4" prot="protected" virt="virtual"><scope>HolonomicLib::TaskWrapper</scope><name>~TaskWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
