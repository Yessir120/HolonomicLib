<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="AsyncHolonomicChassisController_8hpp" kind="file" language="C++">
    <compoundname>AsyncHolonomicChassisController.hpp</compoundname>
    <includes local="yes">okapi/api/chassis/controller/odomChassisController.hpp</includes>
    <includes local="yes">okapi/api/chassis/model/xDriveModel.hpp</includes>
    <includes local="yes">okapi/api/control/iterative/iterativePosPidController.hpp</includes>
    <includes local="yes">okapi/impl/util/timeUtilFactory.hpp</includes>
    <includes refid="Pose2D_8hpp" local="yes">HolonomicLib/Pathing/Pose2D.hpp</includes>
    <includes refid="Math_8hpp" local="yes">HolonomicLib/Utility/Math.hpp</includes>
    <includes refid="StateMachine_8hpp" local="yes">HolonomicLib/Utility/StateMachine.hpp</includes>
    <includes refid="TaskWrapper_8hpp" local="yes">HolonomicLib/Utility/TaskWrapper.hpp</includes>
    <includes refid="Units_8hpp" local="yes">HolonomicLib/Utility/Units.hpp</includes>
    <includedby refid="API_8hpp" local="yes">include/HolonomicLib/API.hpp</includedby>
    <includedby refid="AsyncHolonomicChassisController_8cpp" local="yes">src/HolonomicLib/Chassis/Controller/AsyncHolonomicChassisController.cpp</includedby>
    <incdepgraph>
      <node id="19">
        <label>okapi/api/units/QAcceleration.hpp</label>
      </node>
      <node id="22">
        <label>okapi/api/units/QSpeed.hpp</label>
      </node>
      <node id="11">
        <label>okapi/api/units/QAngle.hpp</label>
      </node>
      <node id="20">
        <label>okapi/api/units/QAngularSpeed.hpp</label>
      </node>
      <node id="21">
        <label>okapi/api/units/QLength.hpp</label>
      </node>
      <node id="6">
        <label>HolonomicLib/Pathing/Pose2D.hpp</label>
        <link refid="Pose2D_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>HolonomicLib/Utility/Math.hpp</label>
        <link refid="Math_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>okapi/api/odometry/odomState.hpp</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="23">
        <label>okapi/api/units/QTime.hpp</label>
      </node>
      <node id="7">
        <label>HolonomicLib/Pathing/Trajectory.hpp</label>
        <link refid="Trajectory_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>utility</label>
      </node>
      <node id="15">
        <label>pros/rtos.hpp</label>
      </node>
      <node id="2">
        <label>okapi/api/chassis/controller/odomChassisController.hpp</label>
      </node>
      <node id="3">
        <label>okapi/api/chassis/model/xDriveModel.hpp</label>
      </node>
      <node id="16">
        <label>HolonomicLib/Utility/TaskWrapper.hpp</label>
        <link refid="TaskWrapper_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/HolonomicLib/Chassis/Controller/AsyncHolonomicChassisController.hpp</label>
        <link refid="AsyncHolonomicChassisController_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>HolonomicLib/Utility/StateMachine.hpp</label>
        <link refid="StateMachine_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>okapi/api/control/iterative/iterativePosPidController.hpp</label>
      </node>
      <node id="18">
        <label>HolonomicLib/Utility/Units.hpp</label>
        <link refid="Units_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>memory</label>
      </node>
      <node id="8">
        <label>initializer_list</label>
      </node>
      <node id="5">
        <label>okapi/impl/util/timeUtilFactory.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/HolonomicLib/API.hpp</label>
        <link refid="API_8hpp"/>
      </node>
      <node id="3">
        <label>src/HolonomicLib/Chassis/Controller/AsyncHolonomicChassisController.cpp</label>
        <link refid="AsyncHolonomicChassisController_8cpp"/>
      </node>
      <node id="1">
        <label>include/HolonomicLib/Chassis/Controller/AsyncHolonomicChassisController.hpp</label>
        <link refid="AsyncHolonomicChassisController_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classHolonomicLib_1_1AsyncHolonomicChassisController" prot="public">HolonomicLib::AsyncHolonomicChassisController</innerclass>
    <innerclass refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" prot="public">HolonomicLib::AsyncHolonomicChassisControllerBuilder</innerclass>
    <innernamespace refid="namespaceHolonomicLib">HolonomicLib</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/chassis/controller/odomChassisController.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/chassis/model/xDriveModel.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/api/control/iterative/iterativePosPidController.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;okapi/impl/util/timeUtilFactory.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Pose2D_8hpp" kindref="compound">HolonomicLib/Pathing/Pose2D.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Math_8hpp" kindref="compound">HolonomicLib/Utility/Math.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="StateMachine_8hpp" kindref="compound">HolonomicLib/Utility/StateMachine.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TaskWrapper_8hpp" kindref="compound">HolonomicLib/Utility/TaskWrapper.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Units_8hpp" kindref="compound">HolonomicLib/Utility/Units.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceHolonomicLib" kindref="compound">HolonomicLib</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="namespaceHolonomicLib_1afed0dfbd97b270c1dc11f0b884f915bd" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceHolonomicLib_1afed0dfbd97b270c1dc11f0b884f915bd" kindref="member">ChassisState</ref><sp/>{<sp/><ref refid="namespaceHolonomicLib_1afed0dfbd97b270c1dc11f0b884f915bdaf219b2ab91a60a48dd0edb233d375a11" kindref="member">MOVING_TO_POINT</ref>,<sp/><ref refid="namespaceHolonomicLib_1afed0dfbd97b270c1dc11f0b884f915bda5cdbc4c2cee73eb47090aa3d96684406" kindref="member">FOLLOWING_PATH</ref>,<sp/><ref refid="namespaceHolonomicLib_1afed0dfbd97b270c1dc11f0b884f915bdaa5daf7f2ebbba4975d61dab1c40188c7" kindref="member">IDLE</ref><sp/>};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StateMachine&lt;ChassisState&gt;;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classHolonomicLib_1_1AsyncHolonomicChassisController" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController" kindref="compound">AsyncHolonomicChassisController</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classHolonomicLib_1_1TaskWrapper" kindref="compound">TaskWrapper</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classHolonomicLib_1_1StateMachine" kindref="compound">StateMachine&lt;ChassisState&gt;</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController" kindref="compound">AsyncHolonomicChassisController</ref>(</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;okapi::OdomChassisController&gt;<sp/>ichassis,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::IterativePosPIDController&gt;<sp/>idistController,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::IterativePosPIDController&gt;<sp/>iturnController,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::TimeUtil<sp/>&amp;itimeUtil);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a39298643fed60a60698cf137a433a869" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a39298643fed60a60698cf137a433a869" kindref="member">AsyncHolonomicChassisControllerBuilder</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTarget(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>&amp;ipose,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waitUntilSettled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTarget(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classHolonomicLib_1_1Trajectory" kindref="compound">Trajectory</ref><sp/>&amp;itrajectory,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waitUntilSettled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTarget(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classHolonomicLib_1_1TimedTrajectory" kindref="compound">TimedTrajectory</ref><sp/>&amp;itrajectory,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waitUntilSettled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stop();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitUntilSettled();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPose(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>&amp;ipose);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>getPose();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSettled();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loop()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resetControllers();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setControllerSampleTime(okapi::QTime<sp/>itime);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a0fdec61410af96d89275473fca65894c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;okapi::XDriveModel&gt;<sp/>model{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="125" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a9e957edd5ba5a6b97db19e5a35da3be1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;okapi::OdomChassisController&gt;<sp/><ref refid="main_8cpp_1a2aaa5a2ecb33ce62d94d3be910e5e156" kindref="member">chassis</ref>{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a442c2201aa779bd710e59abc830de379" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::IterativePosPIDController&gt;<sp/>distController{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="128" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a35e7fb858907a0f69e5a8811180465cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::IterativePosPIDController&gt;<sp/>turnController{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1ad0ac308bb0e13b1c5073331d73837c0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::AbstractRate&gt;<sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1ad0ac308bb0e13b1c5073331d73837c0e" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="131" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1ae926a61b5d1bb75d978914fe173f73ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::AbstractTimer&gt;<sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1ae926a61b5d1bb75d978914fe173f73ab" kindref="member">timer</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a3cc8ebdf34757bfbf44bb7f8799b466e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1Trajectory" kindref="compound">Trajectory</ref><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a3cc8ebdf34757bfbf44bb7f8799b466e" kindref="member">trajectory</ref>;</highlight></codeline>
<codeline lineno="134" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a33367b32d444678c890b2c326f0c5a9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1TimedTrajectory" kindref="compound">TimedTrajectory</ref><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a33367b32d444678c890b2c326f0c5a9a" kindref="member">timedTrajectory</ref>;</highlight></codeline>
<codeline lineno="135" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1aacf390977de28b9a0fa2f59a977419eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/>endPose{0<sp/>*<sp/>okapi::inch,<sp/>0<sp/>*<sp/>okapi::inch,<sp/>0<sp/>*<sp/>okapi::degree};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a8ddc964faf9dd6942305e6fbb2a783c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structHolonomicLib_1_1Pose2D" kindref="compound">Pose2D</ref><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a8ddc964faf9dd6942305e6fbb2a783c1" kindref="member">currentPose</ref>;</highlight></codeline>
<codeline lineno="138" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a72d773d7ee90e1204618ecaaccae9cc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTimedTrajectory{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="139" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1aa54abc5771999cf9d0308ee322a5ea6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index{0};</highlight></codeline>
<codeline lineno="140" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a11d2dd008802aecd56e3a0d4b34e8369" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>okapi::QTime<sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a11d2dd008802aecd56e3a0d4b34e8369" kindref="member">delayTime</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a876a5a913b687017ca4f99d44d37d1fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pros::Mutex<sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisController_1a876a5a913b687017ca4f99d44d37d1fb" kindref="member">lock</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref>(std::shared_ptr&lt;okapi::OdomChassisController&gt;<sp/>ichassis);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>withDistPID(std::unique_ptr&lt;okapi::IterativePosPIDController&gt;<sp/>idistController);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>withTurnPID(std::unique_ptr&lt;okapi::IterativePosPIDController&gt;<sp/>iturnController);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>withDistGains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::IterativePosPIDController::Gains<sp/>&amp;idistGains);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>withTurnGains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>okapi::IterativePosPIDController::Gains<sp/>&amp;iturnGains);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>withDistSettleParameters(okapi::QLength<sp/>imaxError,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>okapi::QSpeed<sp/>imaxDerivative<sp/>=<sp/>2<sp/>*<sp/>okapi::inch<sp/>/<sp/>okapi::second,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>okapi::QTime<sp/>iwaitTime<sp/>=<sp/>0.1<sp/>*<sp/>okapi::second);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classHolonomicLib_1_1AsyncHolonomicChassisControllerBuilder" kindref="compound">AsyncHolonomicChassisControllerBuilder</ref><sp/>&amp;withTurnSettleParameters(</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>okapi::QAngle<sp/>imaxError,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>okapi::QAngularSpeed<sp/>imaxDerivative<sp/>=<sp/>10<sp/>*<sp/>okapi::degree<sp/>/<sp/>okapi::second,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>okapi::QTime<sp/>iwaitTime<sp/>=<sp/>0.1<sp/>*<sp/>okapi::second);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;AsyncHolonomicChassisController&gt;<sp/>build();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;okapi::OdomChassisController&gt;<sp/><ref refid="main_8cpp_1a2aaa5a2ecb33ce62d94d3be910e5e156" kindref="member">chassis</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::IterativePosPIDController&gt;<sp/>distController;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;okapi::IterativePosPIDController&gt;<sp/>turnController;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>distPIDInit{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>turnPIDInit{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="240"><highlight class="normal">};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>HolonomicLib</highlight></codeline>
    </programlisting>
    <location file="include/HolonomicLib/Chassis/Controller/AsyncHolonomicChassisController.hpp"/>
  </compounddef>
</doxygen>
